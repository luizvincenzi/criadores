import { NextRequest, NextResponse } from 'next/server';
import { addCreatorToSheet, generateCreatorId } from '@/app/actions/sheetsActions';

export async function POST(request: NextRequest) {
  try {
    console.log('üöÄ API /api/add-creator chamada');
    
    const body = await request.json();
    console.log('üìù Dados recebidos:', body);

    // Valida√ß√£o b√°sica
    if (!body.nome || !body.status || !body.whatsapp || !body.instagram) {
      return NextResponse.json({
        success: false,
        error: 'Campos obrigat√≥rios n√£o preenchidos (Nome, Status, WhatsApp, Instagram)'
      }, { status: 400 });
    }

    // Gerar ID √∫nico para o criador
    const criadorId = await generateCreatorId(body.nome);
    console.log(`üÜî ID gerado para criador "${body.nome}": ${criadorId}`);

    // Preparar dados seguindo EXATAMENTE o cabe√ßalho da planilha:
    // Nome | Status | WhatsApp | Cidade | Prospec√ß√£o | Respons√°vel | Instagram | Seguidores instagram - Maio 2025 | TikTok | Seguidores TikTok - julho 25 | Onboarding Inicial | Start date | End date | Related files | Notes | Perfil | Prefer√™ncias | N√£o aceita | Descri√ß√£o do criador | Biografia | Categoria | criador_id
    const creatorData = [
      body.nome,                          // A = Nome
      body.status,                        // B = Status
      body.whatsapp,                      // C = WhatsApp
      body.cidade || '',                  // D = Cidade
      body.prospeccao || '',              // E = Prospec√ß√£o
      body.responsavel || '',             // F = Respons√°vel
      body.instagram,                     // G = Instagram
      body.seguidoresInstagram || '',     // H = Seguidores instagram - Maio 2025
      body.tiktok || '',                  // I = TikTok
      body.seguidoresTiktok || '',        // J = Seguidores TikTok - julho 25
      body.onboardingInicial || '',       // K = Onboarding Inicial
      body.startDate || '',               // L = Start date
      body.endDate || '',                 // M = End date
      body.relatedFiles || '',            // N = Related files
      body.notes || '',                   // O = Notes
      body.perfil || '',                  // P = Perfil
      body.preferencias || '',            // Q = Prefer√™ncias
      body.naoAceita || '',               // R = N√£o aceita
      body.descricaoCriador || '',        // S = Descri√ß√£o do criador
      body.biografia || '',               // T = Biografia
      body.categoria || '',               // U = Categoria
      criadorId                           // V = criador_id (CHAVE PRIM√ÅRIA)
    ];

    console.log('üìä Dados preparados para Google Sheets:', creatorData);

    // Chamar a fun√ß√£o para adicionar criador
    await addCreatorToSheet(creatorData);

    console.log('‚úÖ Criador adicionado com sucesso via API!');

    return NextResponse.json({
      success: true,
      message: 'Criador adicionado com sucesso!'
    });

  } catch (error: any) {
    console.error('‚ùå Erro na API /api/add-creator:', error);
    
    return NextResponse.json({
      success: false,
      error: error.message || 'Erro interno do servidor'
    }, { status: 500 });
  }
}
