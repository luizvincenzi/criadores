#!/usr/bin/env tsx

/**
 * Script para limpar rate limit em desenvolvimento
 */

async function clearRateLimit() {
  console.log('üßπ LIMPANDO RATE LIMIT');
  console.log('=====================\n');

  // Verificar se est√° em desenvolvimento
  if (process.env.NODE_ENV === 'production') {
    console.log('‚ùå Este script s√≥ funciona em desenvolvimento');
    process.exit(1);
  }

  try {
    // Tentar chamar a API de limpeza
    const response = await fetch('http://localhost:3003/api/dev/clear-rate-limit', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
    });

    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ Rate limit limpo:', data.message);
    } else {
      console.log('‚ö†Ô∏è  API n√£o dispon√≠vel (servidor pode estar parado)');
    }

  } catch (error) {
    console.log('‚ö†Ô∏è  Servidor n√£o est√° rodando, mas isso √© normal');
  }

  console.log('\nüîÑ SOLU√á√ïES PARA RATE LIMIT:');
  console.log('');
  console.log('1Ô∏è‚É£ REINICIAR SERVIDOR:');
  console.log('   ‚Ä¢ Pare o servidor (Ctrl+C)');
  console.log('   ‚Ä¢ Execute: npm run dev');
  console.log('   ‚Ä¢ Rate limit ser√° resetado');
  console.log('');
  console.log('2Ô∏è‚É£ CONFIGURA√á√ïES ATUALIZADAS:');
  console.log('   ‚Ä¢ Desenvolvimento: 1000 requests/minuto');
  console.log('   ‚Ä¢ Produ√ß√£o: 100 requests/minuto');
  console.log('   ‚Ä¢ Login dev: 50 tentativas/minuto');
  console.log('');
  console.log('3Ô∏è‚É£ SE PROBLEMA PERSISTIR:');
  console.log('   ‚Ä¢ Limpe cache do navegador');
  console.log('   ‚Ä¢ Use modo inc√≥gnito');
  console.log('   ‚Ä¢ Verifique se n√£o h√° loops infinitos');
  console.log('');
  console.log('‚úÖ RATE LIMIT OTIMIZADO PARA DESENVOLVIMENTO!');
}

async function showRateLimitInfo() {
  console.log('\nüìä INFORMA√á√ïES DO RATE LIMIT');
  console.log('============================');
  console.log('');
  console.log('üîß CONFIGURA√á√ÉO ATUAL:');
  console.log('   ‚Ä¢ Ambiente:', process.env.NODE_ENV || 'development');
  console.log('   ‚Ä¢ API calls: 1000/minuto (dev) | 100/minuto (prod)');
  console.log('   ‚Ä¢ Login: 50/minuto (dev) | 5/15min (prod)');
  console.log('');
  console.log('üéØ COMO FUNCIONA:');
  console.log('   ‚Ä¢ Rate limit por IP');
  console.log('   ‚Ä¢ Janela deslizante');
  console.log('   ‚Ä¢ Reset autom√°tico');
  console.log('   ‚Ä¢ Mais permissivo em desenvolvimento');
  console.log('');
  console.log('üö® SE ATINGIR LIMITE:');
  console.log('   ‚Ä¢ Aguarde 1 minuto');
  console.log('   ‚Ä¢ Ou reinicie o servidor');
  console.log('   ‚Ä¢ Verifique por requisi√ß√µes excessivas');
}

async function main() {
  console.log('üéØ OBJETIVO: Resolver erro de rate limit\n');
  
  await clearRateLimit();
  await showRateLimitInfo();
  
  console.log('\nüí° DICA: Para evitar rate limit no futuro:');
  console.log('‚Ä¢ Evite recarregar a p√°gina muito rapidamente');
  console.log('‚Ä¢ N√£o fa√ßa muitas requisi√ß√µes simult√¢neas');
  console.log('‚Ä¢ Use debounce em campos de busca');
  console.log('‚Ä¢ Implemente cache quando poss√≠vel');
}

if (require.main === module) {
  main().catch(console.error);
}
